<launch>
        <!-- Configuration -->
        <arg name="rviz" default="true"/>
        <arg name="debug" default="false"/>
        <arg if="$(arg debug)" name="launch-prefix" value="screen -d -m gdb -command=$(env HOME)/.ros/my_debug_log --ex run --args"/>
        <arg unless="$(arg debug)" name="launch-prefix" value=""/>

        <!-- Load robot_description to parameter server -->
        <param name="/robot_description"
        command="$(find xacro)/xacro '$(find cartesian_controller_examples)/urdf/robot.urdf.xacro'" />

        <!-- Load hardware configuration -->
        <rosparam file="$(find cartesian_controller_examples)/config/example_hw_config.yaml" command="load"></rosparam>

        <!-- Load hardware interface -->
        <node name="sim_hardware_interface" pkg="ros_control_boilerplate" type="sim_hw_main" output="screen" launch-prefix="$(arg launch-prefix)">

                <!-- Control motion and compliance controller with one handle -->
                <remap from="my_motion_control_handle/target_frame" to="target_frame" />
                <remap from="my_cartesian_motion_controller/target_frame" to="target_frame" />
                <remap from="my_cartesian_compliance_controller/target_frame" to="target_frame" />

                <!-- Control wrenches via one topic -->
                <remap from="my_cartesian_force_controller/target_wrench" to="target_wrench" />
                <remap from="my_cartesian_compliance_controller/target_wrench" to="target_wrench" />
        </node>

        <!-- Robot state publisher -->
        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
                <param name="publish_frequency" type="double" value="50.0" />
                <param name="tf_prefix" type="string" value="" />
        </node>

        <!-- Joint state publisher -->
        <node name="joint_state_controller_spawner" pkg="controller_manager" type="spawner" args="joint_state_controller" respawn="false" output="screen"/>

        <!-- Load controller configuration -->
        <rosparam file="$(find cartesian_controller_examples)/config/example_controllers.yaml" command="load"></rosparam>

        <!-- Spawn controllers -->
        <node name="controller_spawner" pkg="controller_manager" type="spawner"
                args="--stopped
                my_cartesian_motion_controller
                my_cartesian_force_controller
                my_cartesian_compliance_controller
                my_motion_control_handle
                my_joint_to_cartesian_controller
                joint_trajectory_controller
                "
        />

        <!-- Spawn joint controller for testing my_joint_to_cartesian_controller  -->
        <!-- Note: This controller should be loaded and started -->
        <group ns="my_joint_to_cartesian_controller" >
                <node name="controller_spawner" pkg="controller_manager" type="spawner" args="joint_trajectory_controller" />
        </group>

        <!-- Visualization -->
        <group if="$(arg rviz)">
                <arg name="my_rviz" value="-d $(find cartesian_controller_examples)/etc/examples.rviz" />
                <node name="rviz" pkg="rviz" type="rviz" respawn="false" args="$(arg my_rviz)" output="screen" />
        </group>
</launch>
